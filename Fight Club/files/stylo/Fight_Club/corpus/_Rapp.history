install.packages ("stylo")
library(stylo)
install.packages ("stylo")
library(stylo)
install.packages ("stylo")
library(stylo)
library(h=stylo)
library()
library (stylo)
library("stylo")
install.packages ("devtools")
install.packages ("stylo")
library(stylo)
install.packages ("stylo")
library(stylo)
stylo()
library(stylo)
setwd()
getwd()
setwd()
getwd("")
setwd("/Users/annalevina"/stylo)
setwd("/Users/annalevina"/stylo")
getwd()
stylo()
setwd("/Users/annalevina"\\stylo")
setwd()
setwd(~/Desktop/stylo)
stylo()
stylo(corpus)
stylo("corpus")
getwd()
setwd("/Users/annalevina")
stylo()
library(stylo)
getwd()
setwd(~/Desktop/Универ/Минор/stylo)
setwd(Desktop/Универ/Минор/stylo)
getwd(/Users/annalevina/Desktop/Универ/Минор/stylo)
getwd(Users/annalevina/Desktop/Универ/Минор/stylo)
stylo(gui = FALSE, corpus.dir = "corpus", analysis.type = "PCV" , write.png.file = TRUE)
library(stylo)
setwd("/Users/annalevina/Desktop/Универ/Минор/stylo/Fight_Club/corpus")
rolling.classify(write.png.file = TRUE, classification.method = "svm", mfw=100, training.set.sampling = "normal.sampling", slice.size = 5000, slice.overlap = 4500, corpus.lang="Other")
rolling.classify(write.png.file = TRUE, classification.method = "svm", mfw=100, training.set.sampling = "normal.sampling", slice.size = 5000, slice.overlap = 4500, corpus.lang="Other")
rolling.classify(write.png.file = TRUE, classification.method = "ret", mfw=100, training.set.sampling = "normal.sampling", slice.size = 5000, slice.overlap = 4500, corpus.lang="Other")
rolling.classify(write.png.file = TRUE, classification.method = "svm", mfw=100, training.set.sampling = "normal.sampling", slice.size = 5000, slice.overlap = 4500, corpus.lang="Other")
rolling.classify(write.png.file = TRUE, classification.method = "delta", mfw=100, training.set.sampling = "normal.sampling", slice.size = 5000, slice.overlap = 4500, corpus.lang="Other")
rolling.classify(write.png.file = TRUE, classification.method = "swm", mfw=100, training.set.sampling = "normal.sampling", slice.size = 5000, slice.overlap = 4500, corpus.lang="Other")
rolling.classify(write.png.file = TRUE, classification.method = "swm", mfw=100, training.set.sampling = "normal.sampling", slice.size = 5000, slice.overlap = 4500, corpus.lang="Other")
rolling.classify(write.png.file = TRUE, classification.method = "swm", mfw=100, training.set.sampling = "normal.sampling", slice.size = 5000, slice.overlap = 4500, corpus.lang="Other")
rolling.classify(write.png.file = TRUE, classification.method = "swm", mfw=100, training.set.sampling = "normal.sampling", slice.size = 5000, slice.overlap = 4500, corpus.lang="Other")
rolling.classify(write.png.file = TRUE, classification.method = "delta", mfw=100, training.set.sampling = "normal.sampling", slice.size = 5000, slice.overlap = 4500, corpus.lang="Other")
rolling.classify(write.png.file = TRUE, classification.method = "svm", mfw=100, training.set.sampling = "normal.sampling", slice.size = 5000, slice.overlap = 4500, corpus.lang="Other")
rolling.classify(write.png.file = TRUE, classification.method = "delta", mfw=100, training.set.sampling = "normal.sampling", slice.size = 5000, slice.overlap = 4500, corpus.lang="Other")
rolling.classify(write.png.file = TRUE, classification.method = "delta", mfw=100, training.set.sampling = "normal.sampling", slice.size = 5000, slice.overlap = 4500, corpus.lang="Other")
help(rolling.classify)
rolling.classify(write.png.file = TRUE, classification.method = "svm", mfw=100, training.set.sampling = "normal.sampling", slice.size = 5000, slice.overlap = 4500, corpus.lang="Other")
rolling.classify(write.png.file = TRUE, classification.method = "svm", mfw=100, training.set.sampling = "normal.sampling", slice.size = 5000, slice.overlap = 4500, corpus.lang="Other")
rolling.classify(write.png.file = TRUE, classification.method = "svm", mfw=100, training.set.sampling = "normal.sampling", slice.size = 5000, slice.overlap = 4500, corpus.lang="Other")
rolling.classify(write.png.file = TRUE, classification.method = "svm", mfw=100, training.set.sampling = "normal.sampling", slice.size = 5000, slice.overlap = 4500, corpus.lang="Other")
rolling.classify(write.png.file = TRUE, classification.method = "svm", mfw=100, training.set.sampling = "normal.sampling", slice.size = 2000, slice.overlap = 1500, corpus.lang="Other")
rolling.classify(write.png.file = TRUE, classification.method = "svm", mfw=100, training.set.sampling = "normal.sampling", slice.size = 500, slice.overlap = 450, corpus.lang="Other")
